name: build-mcmc
on:
  push:
    tags:
      - "v*"

permissions:
  contents: write  # nötig für Release-Upload

jobs:
  build-manylinux2014:
    name: Build portable Linux binary (manylinux2014)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build inside manylinux2014 via Docker
        shell: bash
        run: |
          set -euo pipefail
          docker run --rm -v "$PWD":/work -w /work quay.io/pypa/manylinux2014_x86_64 bash -euo pipefail -c '
            # 1) Tooling: modernes CMake & Ninja über pip (portabel), GCC via devtoolset-10
            export MANPATH="${MANPATH:-}"   # fix für "unbound variable"
            source /opt/rh/devtoolset-10/enable || true
            /opt/python/cp311-cp311/bin/pip install --no-cache-dir cmake ninja
            export PATH="/opt/python/cp311-cp311/bin:$PATH"

            cmake --version
            ninja --version || true
            g++ --version || true

            # 2) Configure & Build (Ninja, schnelle Builds)
            mkdir -p build
            cmake -S . -B build -G Ninja \
                  -DCMAKE_BUILD_TYPE=Release \
                  -DCMAKE_CXX_FLAGS="-O3 -static-libstdc++ -static-libgcc" \
                  -DCMAKE_EXE_LINKER_FLAGS="-static-libstdc++ -static-libgcc -s"

            cmake --build build -j"$(nproc)"

            # 3) Binary finden (falls das Target nicht exakt build/mcmc heißt)
            BIN="$(find build -maxdepth 3 -type f -name mcmc -print -quit)"
            if [ -z "$BIN" ]; then
              echo "Konnte Binary 'mcmc' nicht finden. Verfügbare Dateien:"
              find build -maxdepth 3 -type f -printf "%p\n"
              exit 1
            fi
            file "$BIN" || true

            # 4) Paketieren & Checksum
            mkdir -p dist
            install -m 0755 "$BIN" dist/mcmc
            tar -C dist -czf mcmc-linux-x86_64.tar.gz mcmc
            sha256sum mcmc-linux-x86_64.tar.gz > mcmc-linux-x86_64.tar.gz.sha256

            echo "===== GLIBC/GLIBCXX Symbole (nur Info) ====="
            (strings -a "$BIN" | grep -E "GLIBC_|GLIBCXX_" | sort -u) || true
          '

      - name: Release on GitHub
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            mcmc-linux-x86_64.tar.gz
            mcmc-linux-x86_64.tar.gz.sha256
          make_latest: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
